add2 <- function(x,y)
{
x + y
}
add2(2, 3)
x <- c(1:10)
le <- x > 10
x[le]
add2 <- function(x,y)
{
x + y
}
above10 <- function(x) {
use <- x > 10
x[use]
}
add2 <- function(x,y)
{
x + y
}
above10 <- function(x) {
use <- x > 10
x[use]
}
above <- function(x, n)
{
use <- x > n
x[use]
}
x <- 1:20
above(x)
above(x, 12)
above <- function(x, n = 10)
{
use <- x > n
x[use]
}
above <- function(x, n = 10)
{
use <- x > n
x[use]
}
above <- function(x, n = 10)
{
use <- x > n
x[use]
}
above(x)
add2 <- function(x,y)
{
x + y
}
above10 <- function(x) {
use <- x > 10
x[use]
}
above <- function(x, n = 10)
{
use <- x > n
x[use]
}
columnmean <- function(y)
{
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc)
{
means[i] <- mean (y[, i])
}
means
}
columnmean(airquality)
airqualit
airquality
columnmean <- function(y, removeNA = TRUE)
{
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc)
{
means[i] <- mean (y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
help(strptime)
x <- 1:10
if (x > 5) {}
if (x > 5) {x <- 0}
clear
f <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)
}
cube <- function(x, n) {
x^3
}
cube(3)
if(x> 5) {
x <- 0
}
install.packages("swirl")
library("swirl")
swirl()
setwd("C:/Users/Kumar/Desktop/ProgrammingAssignment2-master - Copy")
source("cachematrix.R")
c<- cacheSolve(matrix(c(1,2,3,4), 2, 2))
a <- matrix(c(1,2,3,4), 2, 2)
a
makeCacheMatrix(a)
a$get()
a
c<-makeCacheMatrix(a)
c$get()
